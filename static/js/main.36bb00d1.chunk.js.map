{"version":3,"sources":["components/top/weather.jsx","components/top/index.jsx","App.jsx","store.js","index.js"],"names":["Weather","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","location","temp_c","text","iconURL","wind","humidity","precipitation","feelsLike","react_default","a","createElement","className","src","React","Component","TopSection","_this","state","isSelectLocationOpen","setState","prevState","e","locationName","target","value","eventEmitter","emit","_this2","weather_Weather","esm","_ref","ref","onClick","onToggleSelectLocation","bind","placement","_ref2","style","arrowProps","data-placement","htmlFor","id","type","placeholder","onChange","onLocationNameChange","onSelectCity","App","cityName","numForcastDays","isLoading","URL","concat","axios","get","then","res","data","current","temperature","isDay","localtime","weather_descriptions","weather_icons","precip","wind_speed","feelslike","catch","err","console","error","_this3","updateWeather","on","log","_this$state","top_TopSection","Store","EventEmitter","appName","Children","map","children","child","cloneElement","objectSpread","ReactDOM","render","store_Store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.36bb00d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default class Weather extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { location, temp_c, text, iconURL, wind, humidity, precipitation, feelsLike } = this.props;\r\n\r\n\r\n\t\treturn <div className=\"weather-container\">\r\n\t\t\t<div className=\"header\">{location}</div>\r\n\t\t\t<div className=\"inner-container\">\r\n\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t<img src={iconURL} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"current-weather\">{temp_c}°</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"footer\">{text}</div>\r\n\r\n\t\t\t<div className=\"today-info\">\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"title2\">Precipitation</div>\r\n\t\t\t\t\t<div className=\"value\">{precipitation}%</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"title2\">Humidity</div>\r\n\t\t\t\t\t<div className=\"value\">{humidity}%</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"title2\">Wind</div>\r\n\t\t\t\t\t<div className=\"value\">{wind} kmph</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"title2\">Feels Like</div>\r\n\t\t\t\t\t<div className=\"value\">{feelsLike}°</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t}\r\n}","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Weather from \"./weather\";\r\n\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\n\r\nexport default class TopSection extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisSelectLocationOpen: false,\r\n\t\t};\r\n\t}\r\n\r\n\tonToggleSelectLocation() {\r\n\t\tthis.setState((prevState) => ({ \r\n\t\t\tisSelectLocationOpen: !prevState.isSelectLocationOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonLocationNameChange(e) {\r\n\t\tthis.setState({ locationName: e.target.value });\r\n\t}\r\n\r\n\tonSelectCity() {\r\n\t\tconst { locationName } = this.state;\r\n\t\tconst { eventEmitter } = this.props;\r\n\t\tthis.setState({ isSelectLocationOpen: false });\r\n\t\teventEmitter.emit(\"updateWeather\", locationName);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isSelectLocationOpen } = this.state;\r\n\r\n\t\treturn (\r\n\t\t<div className=\"top-container\">\r\n\t\t\t<div className=\"title\">Your Weather</div>\r\n\t\t\t<Weather {...this.props} />\r\n\t\t\t<Manager>\r\n\t\t\t\t<Reference>\r\n\t\t\t\t\t{({ ref }) => (\r\n\t\t\t\t\t\t<button className=\"btn btn-select-location\" ref={ref} onClick={this.onToggleSelectLocation.bind(this)}>\r\n\t\t\t\t\t\t\tChange Location\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Reference>\r\n\t\t\t\t<Popper placement=\"top\">\r\n\t\t\t\t\t{({ ref, style, placement, arrowProps }) =>  \r\n\t\t\t\t\t\tisSelectLocationOpen && (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName=\"popup-container\" \r\n\t\t\t\t\t\t\tref={ref} \r\n\t\t\t\t\t\t\tstyle={style} \r\n\t\t\t\t\t\t\tdata-placement={placement}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"location-name\">Location Name</label>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\tid=\"location-name\" \r\n\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\tplaceholder=\"City Name\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onLocationNameChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-select-location\" onClick={this.onSelectCity.bind(this)}>Select</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\tref={arrowProps.ref} \r\n\t\t\t\t\t\t\t\tstyle={arrowProps.style} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Popper>\r\n\t\t\t</Manager>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\n\nimport './sass/app.scss';\n\nimport TopSection from './components/top/index';\n\nimport axios from 'axios';\n\nconst WEATHER_KEY = '4337eeea324b85003a12b13aaf71ee41';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcityName: 'Houston',\n\t\t\tnumForcastDays: 4,\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tupdateWeather() {\n\t\tconst { cityName } = this.state;\n\t\tconst URL = `http://api.weatherstack.com/current?access_key=${WEATHER_KEY}&query=${cityName}`;\n\t\taxios\n\t\t\t.get(URL)\n\t\t\t.then(res => {\n\t\t\t\treturn res.data;\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\ttemp_c: data.current.temperature,\n\t\t\t\t\tisDay: data.location.localtime,\n\t\t\t\t\ttext: data.current.weather_descriptions,\n\t\t\t\t\ticonURL: data.current.weather_icons,\n\t\t\t\t\tprecipitation: data.current.precip,\n\t\t\t\t\thumidity: data.current.humidity,\n\t\t\t\t\twind: data.current.wind_speed,\n\t\t\t\t\tfeelsLike: data.current.feelslike\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err) console.error('Cannot fetch Weather Data from API, ', err);\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { eventEmitter } = this.props;\n\n\t\tthis.updateWeather();\n\n\t\teventEmitter.on('updateWeather', data => {\n\t\t\tthis.setState({ cityName: data }, () => this.updateWeather());\n\t\t\tconsole.log('LocationName:', data);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisLoading,\n\t\t\tcityName,\n\t\t\ttemp_c,\n\t\t\tisDay,\n\t\t\ttext,\n\t\t\ticonURL,\n\t\t\tprecipitation,\n\t\t\thumidity,\n\t\t\twind,\n\t\t\tfeelsLike\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<div className='app-container'>\n\t\t\t\t<div className='main-container'>\n\t\t\t\t\t{isLoading && <h3>Loading Weather...</h3>}\n\t\t\t\t\t{!isLoading && (\n\t\t\t\t\t\t<div className='top-section'>\n\t\t\t\t\t\t\t<TopSection\n\t\t\t\t\t\t\t\tlocation={cityName}\n\t\t\t\t\t\t\t\ttemp_c={temp_c}\n\t\t\t\t\t\t\t\tisDay={isDay}\n\t\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\t\ticonURL={iconURL}\n\t\t\t\t\t\t\t\teventEmitter={this.props.eventEmitter}\n\t\t\t\t\t\t\t\tprecipitation={precipitation}\n\t\t\t\t\t\t\t\thumidity={humidity}\n\t\t\t\t\t\t\t\twind={wind}\n\t\t\t\t\t\t\t\tfeelsLike={feelsLike}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n// apixu.com = weatherstack.com\n\n// https://weatherstack.com/documentation\n","import React from \"react\";\r\n\r\nimport { EventEmitter } from \"events\";\r\n\r\n\r\nexport default class Store extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\r\n\t\t// Main App State\r\n\t\tthis.state = {\r\n\t\t\tappName: \"Weathe Up\"\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn React.Children.map(this.props.children, (child) => {\r\n\t\t\treturn React.cloneElement(child, { ...this.state, eventEmitter: this.eventEmitter });\r\n\t\t});\r\n\t}\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nimport Store from \"./store\";\n\nReactDOM.render(<Store><App /></Store>, document.getElementById('root'));\n"],"sourceRoot":""}